apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: mongo-secrets-env
  name: mongo-secrets-env
data:
  MONGODB_DBNAME: codeWithDan
  MONGODB_INITDB_ROOT_USERNAME: admin

---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /tmp/data/db
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: myapp
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc
        # example only, environments vars below are actually used
        - name: secrets
          secret:
            secretName: db-passwords # referencing secrets created from readme.md
      containers:        
        - name: mongo
          image: mongo
          ports:
          - containerPort: 27017
            name: web
          # example only, environments vars below are actually used
          volumeMounts:
            - name: mongo-volume
              mountPath: /data/db
            - name: secrets
              mountPath: /etc/db-passwords
              readonly: true
          resources:
            limits:
              memory: "2gi"
              cpu: "1000m"
          env:
          - name: MONGODB_DBNAME
            valueFrom:
              configMapKeyRef:
                name: mongo-secrets-env
                key: MONGODB_DBNAME                
          - name: MONGODB_INITDB_ROOT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: mongo-secrets-env
                key: MONGODB_INITDB_ROOT_USERNAME                
          # pull pw from secret
          - name: MONGODB_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-passwords
                key: db-password
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
